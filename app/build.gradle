plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'kotlin-parcelize'

    alias(libs.plugins.ksp)
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.hilt)
}

android {
    namespace 'uk.ac.tees.w9354187.teesweatherapp'
    compileSdk 34

    defaultConfig {
        applicationId "uk.ac.tees.w9354187.teesweatherapp"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    def nav_version = "2.7.3"
    //Navigation
    implementation "androidx.navigation:navigation-compose:$nav_version"

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:32.3.1')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation("com.google.firebase:firebase-auth-ktx")
    implementation("com.google.firebase:firebase-firestore-ktx")

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation platform('org.jetbrains.kotlin:kotlin-bom:1.8.0')
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.5.1'
    implementation platform('androidx.compose:compose-bom:2022.10.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2022.10.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'


    composeBom = platform(libs.androidx.compose.bom)
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.lifecycle.runtime.ktx)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.compose.ui)
    implementation(libs.androidx.compose.ui.tooling.preview)
    implementation(libs.androidx.compose.material3)
    testImplementation(libs.junit)
    testImplementation(libs.kotlinx.coroutines.test)
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.test.espresso.espresso.core)
    androidTestImplementation(libs.androidx.compose.ui.test.junit4)
    debugImplementation(libs.androidx.compose.ui.tooling)
    debugImplementation(libs.androidx.compose.ui.test.manifest)

    //Lifecycle
    implementation(libs.androidx.lifecycle.viewmodel.compose)
    implementation(libs.androidx.lifecycle.runtime.compose)

    //DataStore
    implementation(libs.androidx.datastore.preferences)

    //Navigation
    implementation(libs.androidx.navigation.compose)
    implementation(libs.androidx.hilt.navigation.compose)

    //Room
    implementation(libs.androidx.room.runtime)
    implementation(libs.androidx.room.ktx)
    ksp(libs.androidx.room.compiler)

    //Hilt
    implementation(libs.hilt.android)
    kapt(libs.hilt.compiler)

    //Retrofit
    implementation(libs.retrofit)
    implementation(libs.converter.moshi)
    implementation(libs.okhttp.logging.interceptor)
    implementation(libs.okhttp.mockwebserver)

    //Location Service
    implementation(libs.play.services.location)

    //Lottie
    implementation(libs.lottie.compose)


    compileSdk = "34"
    compose-compiler = "1.4.3"
    coroutines-test = "1.7.1"
    hilt = "2.44"
    hiltCompiler = "2.44"
    junit = "4.13.2"
    kotlin = "1.8.10"
    ksp = "1.8.10-1.0.9"
    lottie-compose = "6.1.0"
    minSdk = "24"
    moshi = "2.4.0"
    okhttp3-logging-interceptor = "4.5.0"
    okhttp3-mockwebserver = "4.11.0"
    play-services-location = "21.0.1"
    retrofit = "2.9.0"
    room = "2.5.2"
    targetSdk = "34"

    [libraries]
    androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }
    androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core-ktx" }
    androidx-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "androidx-compose-bom" }
    androidx-compose-material3 = { module = "androidx.compose.material3:material3" }
    androidx-compose-ui = { module = "androidx.compose.ui:ui" }
    androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
    androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
    androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
    androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview" }
    androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore-preferences" }
    androidx-hilt-navigation-compose = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "androidx-hilt-navigation-compose" }
    androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle-runtime-compose" }
    androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle-runtime-ktx" }
    androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle-compose" }
    androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation-compose" }
    androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
    androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }
    androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
    androidx-test-espresso-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-test-espresso-core" }
    androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
    converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "moshi" }
    dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hiltCompiler" }
    hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
    hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
    junit = { module = "junit:junit", version.ref = "junit" }
    lottie-compose = { module = "com.airbnb.android:lottie-compose", version.ref = "lottie-compose" }
    kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test" }
    play-services-location = { module = "com.google.android.gms:play-services-location", version.ref = "play-services-location" }
    okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp3-logging-interceptor" }
    okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp3-mockwebserver" }
    retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }

    [plugins]
    android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
    android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
    hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
    kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
    ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
}


